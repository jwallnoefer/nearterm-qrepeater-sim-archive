"""Tests specific to the luetkenhaus scenario.
"""

import unittest
from run.run_luetkenhaus_paper import run
import numpy as np

class TestReproducabilityLuetkenhaus(unittest.TestCase):
    def test_run_seq(self):
        # simple reproducability test with fixed random seed
        np.random.seed(578164)
        p = run(L_TOT=22000, max_iter=20, mode="seq")
        self.assertEqual(p.time_list, [0.161223, 0.295175, 0.450631, 0.474823, 0.547847, 0.745639, 0.8613350000000001, 0.9955110000000001, 1.333079, 1.470727, 1.528071, 1.5327749999999998, 1.6632549999999997, 1.760247, 1.8401029999999998, 2.0601830000000003, 2.113719, 2.214071, 2.315991, 2.3686309999999997])
        self.assertEqual(p.fidelity_list, [(0.9501471109778241+0j), (0.9129822690919149+0j), (0.90068538451139+0j), (0.9548808752993154+0j), (0.9504612129196545+0j), (0.9327892683658803+0j), (0.9516147276031116+0j), (0.9324366859935398+0j), (0.836589625127455+0j), (0.9416428842063612+0j), (0.9324870379814999+0j), (0.9566285793444832+0j), (0.9163188940840636+0j), (0.9239582977698734+0j), (0.951142491669352+0j), (0.9308283963844197+0j), (0.9460829357424178+0j), (0.9132713878665936+0j), (0.9333943387724394+0j), (0.9477459957104526+0j)])
        self.assertEqual(p.correlations_z_list, [(0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.965781080889697+0j), (0.965781080889697+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.965781080889697+0j), (0.9657810808896972+0j), (0.965781080889697+0j), (0.9657810808896972+0j), (0.9657810808896972+0j)])
        self.assertEqual(p.correlations_x_list, [(0.9578180068760147+0j), (0.921403893279578+0j), (0.9093554052657685+0j), (0.9624561493513872+0j), (0.9581257639714378+0j), (0.9408107919764932+0j), (0.9592559777053619+0j), (0.9404653317536859+0j), (0.8465543776057692+0j), (0.9494855651382949+0j), (0.940514666633544+0j), (0.9641685498461628+0j), (0.9246731185830462+0j), (0.9321582066261512+0j), (0.958793280918193+0j), (0.9388895295290389+0j), (0.9538359278145125+0j), (0.9216871718668064+0j), (0.9414036399855314+0j), (0.9554653940390592+0j)])
        self.assertEqual(p.resource_cost_max_list, [1287, 892, 1151, 154, 506, 1276, 909, 701, 2638, 913, 496, 29, 823, 667, 580, 1436, 248, 886, 478, 272])

    def test_run_sim(self):
        # simple reproducability test with fixed random seed
        np.random.seed(578164)
        p = run(L_TOT=22000, max_iter=20, mode="sim")
        self.assertEqual(p.time_list, [0.144199, 0.244103, 0.373015, 0.39026299999999997, 0.44693499999999997, 0.589847, 0.691655, 0.770167, 1.065623, 1.167879, 1.223431, 1.2266789999999999, 1.3188549999999999, 1.393559, 1.458519, 1.619351, 1.647127, 1.746359, 1.799895, 1.830359])
        self.assertEqual(p.fidelity_list, [(0.9014347440976141+0j), (0.9278781812783324+0j), (0.9119238276079461+0j), (0.9532976490837457+0j), (0.939387713959726+0j), (0.9181187479029569+0j), (0.9181674961920454+0j), (0.9474337177816496+0j), (0.8518026788453077+0j), (0.9274298597283939+0j), (0.9332934372230093+0j), (0.9573188443200803+0j), (0.9332429949233915+0j), (0.9338991856880656+0j), (0.9349612064685325+0j), (0.9122603215934882+0j), (0.9572125842815808+0j), (0.9137536844513777+0j), (0.9557274402750476+0j), (0.9542469463849256+0j)])
        self.assertEqual(p.correlations_z_list, [(0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.965781080889697+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.965781080889697+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j), (0.9657810808896972+0j)])
        self.assertEqual(p.correlations_x_list, [(0.9100896278189307+0j), (0.9359989086477024+0j), (0.9203668322703924+0j), (0.9609049042407637+0j), (0.9472759492386125+0j), (0.9264366154282463+0j), (0.9264843790038844+0j), (0.9551594241116748+0j), (0.8614601282593356+0j), (0.9355596431747772+0j), (0.9413047766432824+0j), (0.9648448714974213+0j), (0.9412553532760582+0j), (0.9418982890140638+0j), (0.9429388570181043+0j), (0.9206965290911584+0j), (0.9647407579073631+0j), (0.9221597260802595+0j), (0.9632856137491563+0j), (0.9618350257751987+0j)])
        self.assertEqual(p.resource_cost_max_list, [1287, 892, 1151, 154, 506, 1276, 909, 701, 2638, 913, 496, 29, 823, 667, 580, 1436, 248, 886, 478, 272])

if __name__ == '__main__':
    unittest.main()
